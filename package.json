{
  "name": "sportification-be",
  "version": "2.0.0",
  "description": "Production-ready Backend API for Sports Companion Application - A comprehensive platform connecting sports enthusiasts through matches, tournaments, teams, and real-time communication",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "repository": {
    "type": "git",
    "url": "https://github.com/typhoon1996/sportification-be.git"
  },
  "bugs": {
    "url": "https://github.com/typhoon1996/sportification-be/issues"
  },
  "homepage": "https://github.com/typhoon1996/sportification-be#readme",
  "scripts": {
    "preinstall": "echo 'ðŸ“¦ Installing dependencies...'",
    "postinstall": "echo 'âœ… Dependencies installed successfully'",
    "prebuild": "npm run clean",
    "build": "tsc --project config/tsconfig.json",
    "postbuild": "echo 'âœ… Build completed successfully'",
    "clean": "rimraf dist coverage .nyc_output",
    "start": "node dist/index.js",
    "start:dev": "cross-env NODE_ENV=development node dist/index.js",
    "start:test": "cross-env NODE_ENV=test node dist/index.js",
    "start:prod": "cross-env NODE_ENV=production node dist/index.js",
    "dev": "cross-env NODE_ENV=development nodemon",
    "dev:test": "cross-env NODE_ENV=test nodemon",
    "dev:debug": "cross-env NODE_ENV=development nodemon --exec node --inspect=0.0.0.0:9229 -r ts-node/register -r tsconfig-paths/register --project config/tsconfig.json src/index.ts",
    "test": "cross-env NODE_ENV=test jest --config config/jest.config.js --detectOpenHandles",
    "test:watch": "cross-env NODE_ENV=test jest --config config/jest.config.js --watch",
    "test:coverage": "cross-env NODE_ENV=test jest --config config/jest.config.js --coverage",
    "test:unit": "cross-env NODE_ENV=test jest --config config/jest.config.js --testPathPattern=src.*\\.test\\.ts$ --detectOpenHandles",
    "test:integration": "cross-env NODE_ENV=test jest --config config/jest.config.js --testPathPattern=tests.*\\.test\\.ts$ --detectOpenHandles",
    "test:ci": "cross-env NODE_ENV=test jest --config config/jest.config.js --ci --coverage --maxWorkers=2",
    "test:debug": "cross-env NODE_ENV=test node --inspect-brk node_modules/.bin/jest --config config/jest.config.js --runInBand",
    "lint": "eslint 'src/**/*.ts' 'tests/**/*.ts'",
    "lint:fix": "eslint 'src/**/*.ts' 'tests/**/*.ts' --fix",
    "lint:report": "eslint 'src/**/*.ts' 'tests/**/*.ts' -f json -o eslint-report.json",
    "format": "prettier --write \"src/**/*.{ts,json}\" \"tests/**/*.{ts,json}\" \"*.{md,json}\" \"**/*.{yml,yaml}\"",
    "format:check": "prettier --check \"src/**/*.{ts,json}\" \"tests/**/*.{ts,json}\" \"*.{md,json}\" \"**/*.{yml,yaml}\"",
    "typecheck": "tsc --project config/tsconfig.json --noEmit",
    "validate": "npm run typecheck && npm run lint && npm run format:check",
    "migrate": "ts-node src/scripts/migrate.ts",
    "migrate:dev": "cross-env NODE_ENV=development ts-node src/scripts/migrate.ts",
    "migrate:test": "cross-env NODE_ENV=test ts-node src/scripts/migrate.ts",
    "migrate:prod": "cross-env NODE_ENV=production ts-node src/scripts/migrate.ts",
    "migrate:rollback": "ts-node src/scripts/migrate.ts --rollback",
    "seed": "ts-node src/scripts/seed.ts",
    "seed:dev": "cross-env NODE_ENV=development ts-node src/scripts/seed.ts",
    "seed:test": "cross-env NODE_ENV=test ts-node src/scripts/seed.ts",
    "db:setup": "npm run migrate:dev && npm run seed:dev",
    "db:reset": "npm run migrate:rollback && npm run db:setup",
    "docker:build": "docker build -f config/docker/Dockerfile -t sportification-be:latest .",
    "docker:build:dev": "docker build -f config/docker/Dockerfile --target development -t sportification-be:dev .",
    "docker:build:test": "docker build -f config/docker/Dockerfile --target test -t sportification-be:test .",
    "docker:build:prod": "docker build -f config/docker/Dockerfile --target production -t sportification-be:prod .",
    "docker:build:distroless": "docker build -f config/docker/Dockerfile --target distroless -t sportification-be:distroless .",
    "docker:run": "docker run -p 3000:3000 --env-file .env sportification-be:latest",
    "docker:run:dev": "docker run -p 3000:3000 -p 9229:9229 -v \"${PWD}/src:/app/src\" --env-file config/environments/.env.development sportification-be:dev",
    "docker:run:prod": "docker run -p 3000:3000 --env-file config/environments/.env.production sportification-be:prod",
    "docker:compose:up": "docker-compose -f config/docker/docker-compose.dev.yml up",
    "docker:compose:up:build": "docker-compose -f config/docker/docker-compose.dev.yml up --build",
    "docker:compose:down": "docker-compose -f config/docker/docker-compose.dev.yml down",
    "docker:compose:logs": "docker-compose -f config/docker/docker-compose.dev.yml logs -f",
    "docker:compose:test": "docker-compose -f config/docker/docker-compose.test.yml up --abort-on-container-exit",
    "docker:compose:prod": "docker-compose -f config/docker/docker-compose.prod.yml up -d",
    "docker:prune": "docker system prune -af --volumes",
    "setup": "node scripts/make-executable.js && npm install",
    "setup:env": "node scripts/development/setup-local-env.js",
    "setup:aws": "node scripts/deployment/aws-setup.js",
    "deploy": "node scripts/deployment/deploy.js",
    "deploy:dev": "node scripts/deployment/deploy.js dev",
    "deploy:test": "node scripts/deployment/deploy.js test",
    "deploy:prod": "node scripts/deployment/deploy.js prod",
    "logs": "node scripts/view-logs.js app",
    "logs:error": "node scripts/view-logs.js error",
    "health": "node scripts/health-check.js",
    "docs": "open-cli http://localhost:3000/api/v1/docs",
    "prepare": "husky install || echo 'Husky not configured'",
    "precommit": "npm run validate && npm run test:unit",
    "prepush": "npm run test",
    "security:audit": "npm audit --production",
    "security:audit:fix": "npm audit fix",
    "security:check": "snyk test || echo 'Snyk not configured'",
    "deps:check": "npx npm-check-updates",
    "deps:update": "npx npm-check-updates -u && npm install",
    "deps:outdated": "npm outdated",
    "ci": "npm run validate && npm run test:ci",
    "release": "npm run build && npm run test && echo 'Ready for release'",
    "version:patch": "npm version patch -m 'chore: bump version to %s'",
    "version:minor": "npm version minor -m 'feat: bump version to %s'",
    "version:major": "npm version major -m 'feat!: bump version to %s'"
  },
  "keywords": [
    "sports",
    "api",
    "backend",
    "nodejs",
    "typescript",
    "express",
    "mongodb",
    "redis",
    "socket.io",
    "jwt",
    "rest-api",
    "microservices-ready",
    "modular-monolith",
    "clean-architecture",
    "ddd",
    "event-driven",
    "docker",
    "kubernetes",
    "aws",
    "terraform",
    "devops",
    "ci-cd",
    "production-ready",
    "enterprise",
    "scalable",
    "secure"
  ],
  "author": {
    "name": "Sports Companion Team",
    "email": "team@sportification.com",
    "url": "https://github.com/typhoon1996"
  },
  "contributors": [
    {
      "name": "Sports Companion Team",
      "email": "team@sportification.com"
    }
  ],
  "license": "MIT",
  "private": false,
  "dependencies": {
    "@types/passport": "^1.0.17",
    "@types/passport-facebook": "^3.0.3",
    "@types/passport-github2": "^1.2.9",
    "@types/passport-google-oauth20": "^2.0.16",
    "@types/qrcode": "^1.5.5",
    "@types/speakeasy": "^2.0.10",
    "axios": "^1.12.2",
    "bcryptjs": "^2.4.3",
    "compression": "^1.7.4",
    "connect-redis": "^7.1.1",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-mongo-sanitize": "^2.2.0",
    "express-rate-limit": "^7.1.5",
    "express-session": "^1.18.2",
    "express-validator": "^7.0.1",
    "helmet": "^7.1.0",
    "hpp": "^0.2.3",
    "ioredis": "^5.3.2",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.0.3",
    "multer": "^2.0.2",
    "nodemailer": "^7.0.9",
    "passport": "^0.7.0",
    "passport-facebook": "^3.0.0",
    "passport-github2": "^0.1.12",
    "passport-google-oauth20": "^2.0.0",
    "qrcode": "^1.5.4",
    "rate-limit-redis": "^4.2.2",
    "redis": "^5.8.2",
    "socket.io": "^4.7.4",
    "speakeasy": "^2.0.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/express-session": "^1.18.2",
    "@types/hpp": "^0.2.6",
    "@types/ioredis": "^4.28.10",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.10.4",
    "@types/nodemailer": "^7.0.2",
    "@types/supertest": "^2.0.16",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "cross-env": "^10.1.0",
    "eslint": "^8.54.0",
    "eslint-config-google": "^0.14.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.1.3",
    "jest": "^29.7.0",
    "log-tail": "^0.1.4",
    "mongodb-memory-server": "^10.2.1",
    "nodemon": "^3.0.2",
    "npm-run-all": "^4.1.5",
    "open-cli": "^8.0.0",
    "prettier": "^3.2.5",
    "rimraf": "^6.0.1",
    "supertest": "^7.1.4",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.3.3"
  },
  "engines": {
    "node": ">=18.0.0 <=22.x",
    "npm": ">=9.0.0",
    "yarn": ">=1.22.0",
    "pnpm": ">=8.0.0"
  },
  "funding": {
    "type": "individual",
    "url": "https://github.com/sponsors/typhoon1996"
  }
}
